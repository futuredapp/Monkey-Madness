#!/bin/bash

#nice intro
echo
echo "Monkey Madness - stress test loop";
echo "---------------------------";

#check android api ver
api=$(adb shell getprop ro.build.version.sdk);
api=${api//[!0-9]/};
if ! ([[ $api -ge 21 ]]); then
   echo "Sorry this script supports only API 21+"
   echo "Aborting..."
   echo
   exit
fi

#check if any device is connected
if ! ([[ $(adb devices -l)  == *"model"* ]]); then
   echo "No device connected, aborting..."
   echo
   exit
fi

#check if more devices connected
if ([[ $(adb devices -l | wc -l) -gt 3 ]]); then
   echo "More than one device detected, connect only one to continue..."
fi
while ([[ $(adb devices -l | wc -l) -gt 3 ]]); do 
   sleep 1; 
done

#check if display is on
if ([[ $(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) == *"StatusBar}"* ]]); then
   echo "Turn screen on and unlock device to continue..."
fi
while ([[ $(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) == *"StatusBar}"* ]]); do 
   sleep 1; 
done

#get app package name
app=$(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev)

#check if system package
if ([[ $(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) == *"android"* ]]); then
   echo "App appears to be system package, open your app to continue...";
   while ([[ $(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) == *"android"* ]]); do 
      sleep 2;     
   done
   sleep 3;
   app=$(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) 
fi

#check if launcher
if ([[ $(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) == *"launcher"* ]]); then
   echo -n "App appears to be launcher, are you sure you want to continue? ";
   read force;
   if [[ $force == *"n"* ]]; then
      echo "Aborting...";
      exit;
   else
      app=$(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) 
   fi
fi

#echo package name of tested app
echo "Foreground app package name: "$app

#check/set number of loops
loops=0
if [ -z "$1" ] || (( $1<1 )) ; then
   until [[ $loops =~ ^-?[0-9]+$ ]] && [ $loops -gt 0 ]; do
      echo -n "Please specify number of tests: ";
      read loops;
   done
else
   echo "Test will run $1x.";
   loops=$1;
fi

#check/set number input events
events=0
if [ -z "$2" ] || (( $2<1 )); then
   until [[ $events =~ ^-?[0-9]+$ ]] && [ $events -gt 0 ]; do
      echo -n "Please specify number of input events: ";
      read events;
   done
else
   echo "Each test will include $2 input events.";
   events=$2;
fi

#run loop
for i in $(seq 1 $loops); do
   echo "Restarting $app"
   adb shell am force-stop $app >/dev/null 2>&1 #kill app to have fresh start
   adb shell monkey -p $app -c android.intent.category.LAUNCHER 1 >/dev/null 2>&1  #start app
   #wait for $app to appear
   sec=0;
   until [ $(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev) == $app ] ; do 
      ((sec++)) ; 
      echo -ne "Waiting for launch $sec seconds..." "\r" ; 
      sleep 1 ; 
   done 
   echo
   #blaze that
   scriptlocation=$( cd $(dirname $0) ; pwd -P );
   echo "Running test #"$i
   bash $scriptlocation/adb_test $events
done

#show results 
echo $loops "tests finished!"
if [ -d ~/Desktop/$app ] ; then
   crashcount=$(ls ~/Desktop/$app | grep CRASH | wc -l);
   freezecount=$(ls ~/Desktop/$app | grep FREEZE | wc -l);
   killcount=$(ls ~/Desktop/$app | grep -v 'FREEZE\|CRASH' | wc -l);
   if [ $crashcount -gt 0 ] ; then echo "App crashed: "$crashcount"x"; fi
   if [ $freezecount -gt 0 ] ; then echo "App freezed: "$freezecount"x"; fi
   if [ $killcount -gt 0 ] ; then echo "Monkey killed: "$killcount"x"; fi
   loops=$((loops - crashcount - freezecount - killcount))
   echo "App survived: "$loops"x"
   echo "Logs from failed tests are located at ~/Desktop/$app"
   echo
else
   echo "App survived them all!" 
   echo  
fi
